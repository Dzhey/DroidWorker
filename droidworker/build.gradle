apply plugin: 'com.android.library'

configurations {
    archives {
        extendsFrom configurations.default
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 30
        versionCode VERSION_CODE
        versionName VERSION_NAME
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        encoding = 'utf-8'
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }

    lintOptions {
        quiet false
        abortOnError false
        ignoreWarnings false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

//    libraryVariants.all { variant ->
//        variant.outputs.each { output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith('.aar')) {
//                def fileName = "${archivesBaseName}-${defaultConfig.versionName}-${variant.name}.aar"
//                output.outputFile = new File(outputFile.parent, fileName)
//            }
//        }
//    }
}

sourceSets {
    unitTest {
        java.srcDir file('test/java')
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // JUnit, Mockito and PowerMock
    testImplementation 'junit:junit:4.12'
    testImplementation ("org.mockito:mockito-core:1.10.19") {
        exclude group: 'org.hamcrest'
    }
    testImplementation ('org.powermock:powermock-module-junit4:1.6.4') {
        exclude group: 'org.hamcrest'
    }
    testImplementation ('org.powermock:powermock-api-mockito:1.6.4') {
        exclude group: 'org.hamcrest'
    }
}

tasks.withType(Test) {
    testLogging {
        events 'started', 'passed'
    }
}
